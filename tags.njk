---
# 【關鍵修正】讓分頁功能使用由 _data/tagList.js 提供的全域變數 "tagList"
# 這樣可以確保產生頁面的依據，和您網站內容的依據是完全一致的。
pagination:
  data: "tagList"
  size: 1
  alias: tag
permalink: "/tags/{{ tag | slug }}/index.html"
---
<!DOCTYPE html>
<html lang="zh-Hant">
<head>
  <link rel="icon" href="/favicon.ico" type="image/x-icon">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>標籤：{{ tag }} | PHDEV Notebooks</title>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="alternate" type="application/rss+xml" title="PHDEV Notebooks RSS" href="/feed.xml">
  <!-- Google tag (gtag.js) -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-00J0H60BY9"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'G-00J0H60BY9');
  </script>
</head>
<body>
<header>
  <a href="/" class="logo-link">
    <img src="/img/logo.png" alt="PHDEV Notebooks Logo" class="logo">
  </a>
  <h1>標籤：{{ tag }}</h1>
  <div class="header-actions">
    <button id="subscribe-btn" class="subscribe-button">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M4 11a9 9 0 0 1 9-9"></path>
        <path d="M4 4a16 16 0 0 1 16 16"></path>
        <circle cx="5" cy="19" r="1"></circle>
      </svg>
      訂閱更新
    </button>
  </div>
</header>

<main>
  <nav class="category-nav">
    <ul class="category-list">
      <li><a href="/" class="active">全部文章</a></li>
      {# 我們繼續使用由 _data/tagList.js 產生的 tagList 變數 #}
      {%- for t in tagList | randomLimit(20) -%}
        <li><a href="/tags/{{ t | slug }}/">{{ t }}</a></li>
      {%- endfor -%}
    </ul>
  </nav>

  <div class="controls-wrapper">
    <div class="view-switcher">
      <button id="grid-view-btn" class="view-btn active" aria-label="格狀檢視">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="3" width="7" height="7"></rect><rect x="14" y="3" width="7" height="7"></rect><rect x="14" y="14" width="7" height="7"></rect><rect x="3" y="14" width="7" height="7"></rect></svg>
      </button>
      <button id="list-view-btn" class="view-btn" aria-label="列表檢視">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="8" y1="6" x2="21" y2="6"></line><line x1="8" y1="12" x2="21" y2="12"></line><line x1="8" y1="18" x2="21" y2="18"></line><line x1="3" y1="6" x2="3.01" y2="6"></line><line x1="3" y1="12" x2="3.01" y2="12"></line><line x1="3" y1="18" x2="3.01" y2="18"></line></svg>
      </button>
    </div>
  </div>
  
  <div class="card-grid" id="post-container">
    {# 【關鍵修正】使用我們在 .eleventy.js 保留的 filterByTag 篩選器，來過濾由 _data/posts.js 產生的 posts 變數 #}
    {%- set postsForThisTag = posts | filterByTag(tag) -%}
    
    {%- for post in postsForThisTag -%}
      <article class="card {% if loop.index0 >= 20 %}post-hidden{% endif %}">
        <a href="{{ post.url }}" class="card-link-wrapper" target="_blank" rel="noopener noreferrer">
          <div class="card-icon">{{ post.icon or '📄' }}</div>
          <div class="card-spacer"></div>
          <div class="card-content">
            <h2>{{ post.title }}</h2>
            <div class="card-meta">
              <span>{{ post.date | date('yyyy-MM-dd') }}</span>
              {% if post.tags and post.tags.length > 0 %}
                <div class="tag-popup-container">
                  <span>{{ post.tags | length }} 個標籤</span>
                </div>
              {% endif %}
            </div>
          </div>
        </a>
      </article>
    {%- endfor -%}
  </div>

  {%- if postsForThisTag and postsForThisTag.length > 20 -%}
  <div class="load-more-container">
    <button id="load-more-btn">載入更多</button>
  </div>
  {%- endif -%}

  <div style="text-align: center; margin: 2rem 0;">
    <a href="/" class="button-link" style="text-decoration: none; color: inherit; background-color: #eee; padding: 8px 16px; border-radius: 16px;">返回首頁</a>
  </div>
</main>
<div id="subscribe-modal" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <h2>訂閱 PHDEV Notebooks</h2>
      <button id="close-modal" class="close-btn">&times;</button>
    </div>
    <div class="modal-body">
      <div class="subscription-options">
        <div class="subscription-option"><div class="option-icon">📡</div><div class="option-content"><h3>RSS 訂閱</h3><p>使用您喜愛的 RSS 閱讀器訂閱我們的內容</p><button id="rss-btn" class="option-button">複製 RSS 網址</button></div></div>
        <div class="subscription-option"><div class="option-icon">📧</div><div class="option-content"><h3>電子郵件通知</h3><p>在有新內容時收到電子郵件通知</p><form id="email-subscribe-form" class="email-form"><input type="email" id="email-input" placeholder="輸入您的電子郵件" required><button type="submit" class="option-button">訂閱</button></form></div></div>
        <div class="subscription-option"><div class="option-icon">🔔</div><div class="option-content"><h3>瀏覽器通知</h3><p>直接在瀏覽器中收到新內容通知</p><button id="notify-btn" class="option-button">啟用通知</button></div></div>
      </div>
    </div>
  </div>
</div>
<script src="/js/subscription.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  const gridViewBtn = document.getElementById('grid-view-btn');
  const listViewBtn = document.getElementById('list-view-btn');
  const postContainer = document.getElementById('post-container');
  const savedView = localStorage.getItem('viewMode') || 'grid';
  if (savedView === 'list') {
    postContainer.classList.add('list-view');
    gridViewBtn.classList.remove('active');
    listViewBtn.classList.add('active');
  }
  gridViewBtn.addEventListener('click', function() {
    postContainer.classList.remove('list-view');
    gridViewBtn.classList.add('active');
    listViewBtn.classList.remove('active');
    localStorage.setItem('viewMode', 'grid');
  });
  listViewBtn.addEventListener('click', function() {
    postContainer.classList.add('list-view');
    gridViewBtn.classList.remove('active');
    listViewBtn.classList.add('active');
    localStorage.setItem('viewMode', 'list');
  });
});
</script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  const loadMoreBtn = document.getElementById('load-more-btn');
  if (!loadMoreBtn) return;
  const postsToLoad = 20;
  loadMoreBtn.addEventListener('click', function() {
    const hiddenPosts = document.querySelectorAll('.post-hidden');
    const postsToShow = Array.from(hiddenPosts).slice(0, postsToLoad);
    postsToShow.forEach(post => post.classList.remove('post-hidden'));
    if (document.querySelectorAll('.post-hidden').length === 0) {
      loadMoreBtn.classList.add('hidden');
    }
  });
});
</script>
</body>
</html>
